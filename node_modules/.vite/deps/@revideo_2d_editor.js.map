{
  "version": 3,
  "sources": ["../../@revideo/2d/src/editor/Provider.tsx", "../../@revideo/2d/src/editor/NodeInspectorConfig.tsx", "../../@revideo/2d/src/editor/PreviewOverlayConfig.tsx", "../../@revideo/2d/src/editor/icons/CircleIcon.tsx", "../../@revideo/2d/src/editor/icons/CodeBlockIcon.tsx", "../../@revideo/2d/src/editor/icons/CurveIcon.tsx", "../../@revideo/2d/src/editor/icons/GridIcon.tsx", "../../@revideo/2d/src/editor/icons/ImgIcon.tsx", "../../@revideo/2d/src/editor/icons/LayoutIcon.tsx", "../../@revideo/2d/src/editor/icons/LineIcon.tsx", "../../@revideo/2d/src/editor/icons/NodeIcon.tsx", "../../@revideo/2d/src/editor/icons/RayIcon.tsx", "../../@revideo/2d/src/editor/icons/RectIcon.tsx", "../../@revideo/2d/src/editor/icons/ShapeIcon.tsx", "../../@revideo/2d/src/editor/icons/TxtIcon.tsx", "../../@revideo/2d/src/editor/icons/VideoIcon.tsx", "../../@revideo/2d/src/editor/icons/View2DIcon.tsx", "../../@revideo/2d/src/editor/icons/IconMap.ts", "../../node_modules/clsx/dist/clsx.mjs", "../../@revideo/2d/src/editor/tree/TreeElement.tsx", "../../@revideo/2d/src/editor/tree/NodeElement.tsx", "../../@revideo/2d/src/editor/tree/TreeRoot.tsx", "../../@revideo/2d/src/editor/tree/DetachedRoot.tsx", "../../@revideo/2d/src/editor/tree/ViewRoot.tsx", "../../@revideo/2d/src/editor/SceneGraphTabConfig.tsx", "../../@revideo/2d/src/editor/index.ts"],
  "sourcesContent": ["import type {ReadonlySignal, Signal} from '@preact/signals';\nimport {computed, signal, useSignalEffect} from '@preact/signals';\nimport type {Scene2D} from '@revideo/2d';\nimport {SceneRenderEvent} from '@revideo/core';\nimport {useApplication, useCurrentScene} from '@revideo/ui';\nimport type {ComponentChildren} from 'preact';\nimport {createContext} from 'preact';\nimport {useContext, useMemo} from 'preact/hooks';\n\nexport interface PluginState {\n  selectedKey: Signal<string | null>;\n  hoveredKey: Signal<string | null>;\n  openNodes: Map<string, boolean>;\n  scene: ReadonlySignal<Scene2D | null>;\n  selectedChain: ReadonlySignal<Set<string>>;\n  afterRender: ReadonlySignal<number>;\n}\n\nconst PluginContext = createContext<PluginState | null>(null);\n\nexport const NodeInspectorKey = '@revideo/2d/node-inspector';\n\nexport function usePluginState() {\n  return useContext(PluginContext)!;\n}\n\nexport function Provider({children}: {children?: ComponentChildren}) {\n  const {inspection} = useApplication();\n  const currentScene = useCurrentScene();\n\n  const state = useMemo(() => {\n    const scene = signal(currentScene as Scene2D);\n    const selectedKey = signal<string | null>(null);\n    const afterRender = signal(0);\n    const hoveredKey = signal<string | null>(null);\n    const openNodes = new Map<string, boolean>();\n    const selectedChain = computed(() => {\n      const chain = new Set<string>();\n      const key = selectedKey.value;\n      const selectedNode = scene.value?.getNode(key);\n      if (selectedNode) {\n        let node = selectedNode.parent() ?? null;\n        while (node) {\n          chain.add(node.key);\n          node = node.parent();\n        }\n      }\n\n      return chain;\n    });\n\n    return {\n      selectedKey,\n      hoveredKey,\n      afterRender,\n      openNodes,\n      selectedChain,\n      scene,\n    } satisfies PluginState;\n  }, []);\n\n  state.scene.value = currentScene as Scene2D;\n\n  useSignalEffect(() =>\n    state.scene.value?.onRenderLifecycle.subscribe(([event]) => {\n      if (event === SceneRenderEvent.AfterRender) {\n        state.afterRender.value++;\n      }\n    }),\n  );\n\n  useSignalEffect(() => {\n    const {key, payload} = inspection.value;\n    if (key === NodeInspectorKey) {\n      state.selectedKey.value = payload as string;\n    }\n  });\n\n  useSignalEffect(() => {\n    const nodeKey = state.selectedKey.value;\n    const {key, payload} = inspection.peek();\n\n    if (key === NodeInspectorKey && !nodeKey) {\n      inspection.value = {key: '', payload: null};\n    } else if (payload !== nodeKey) {\n      inspection.value = {key: NodeInspectorKey, payload: nodeKey};\n    }\n  });\n\n  return (\n    <PluginContext.Provider value={state}>{children}</PluginContext.Provider>\n  );\n}\n", "import {useComputed} from '@preact/signals';\nimport type {PluginInspectorConfig} from '@revideo/ui';\nimport {\n  AutoField,\n  Button,\n  Group,\n  Label,\n  Pane,\n  Separator,\n  UnknownField,\n  findAndOpenFirstUserFile,\n  useApplication,\n} from '@revideo/ui';\nimport {NodeInspectorKey, usePluginState} from './Provider';\n\nfunction Component() {\n  const {inspection} = useApplication();\n  const {scene, afterRender} = usePluginState();\n  const node = useComputed(() => {\n    afterRender.value;\n    const {payload} = inspection.value;\n    return scene.value?.getNode(payload as string);\n  });\n\n  const attributes = useComputed(() => {\n    afterRender.value;\n    const currentNode = node.value;\n    const attributes: [string, unknown][] = [];\n\n    if (currentNode) {\n      for (const {key, meta, signal} of currentNode) {\n        if (!meta.inspectable) continue;\n        attributes.push([key, signal()]);\n      }\n    }\n\n    return attributes;\n  });\n\n  const stack = node.value?.creationStack;\n\n  return (\n    <Pane title=\"Node Inspector\" id=\"node-inspector-pane\">\n      <Separator size={1} />\n      {stack && (\n        <Group>\n          <Label />\n          <Button onClick={() => findAndOpenFirstUserFile(stack)} main>\n            GO TO SOURCE\n          </Button>\n        </Group>\n      )}\n      <Group>\n        <Label>key</Label>\n        <UnknownField value={inspection.value.payload} />\n      </Group>\n      {!node.value && (\n        <Group>\n          <Label />\n          Couldn't find the node. It may have been deleted or doesn't exist yet.\n        </Group>\n      )}\n      {attributes.value.map(([key, value]) => (\n        <Group key={key}>\n          <Label>{key}</Label>\n          <AutoField value={value} />\n        </Group>\n      ))}\n    </Pane>\n  );\n}\n\nexport const NodeInspectorConfig: PluginInspectorConfig = {\n  key: NodeInspectorKey,\n  component: Component,\n};\n", "import {transformVectorAsPoint, Vector2} from '@revideo/core';\nimport type {PluginOverlayConfig} from '@revideo/ui';\nimport {\n  MouseButton,\n  OverlayWrapper,\n  useViewportContext,\n  useViewportMatrix,\n} from '@revideo/ui';\nimport type {ComponentChildren} from 'preact';\nimport {usePluginState} from './Provider';\n\nfunction Component({children}: {children?: ComponentChildren}) {\n  const state = useViewportContext();\n  const {scene, selectedKey} = usePluginState();\n  const matrix = useViewportMatrix();\n\n  return (\n    <OverlayWrapper\n      onPointerDown={event => {\n        if (event.button !== MouseButton.Left || event.shiftKey) return;\n        if (!scene.value) return;\n        event.stopPropagation();\n\n        const diff = new Vector2(\n          event.x - state.rect.x,\n          event.y - state.rect.y,\n        );\n        const position = transformVectorAsPoint(diff, matrix.inverse());\n\n        selectedKey.value = scene.value.inspectPosition(\n          position.x,\n          position.y,\n        ) as string;\n      }}\n    >\n      {children}\n    </OverlayWrapper>\n  );\n}\n\nfunction drawHook() {\n  const {selectedKey, hoveredKey, afterRender, scene} = usePluginState();\n  selectedKey.value;\n  hoveredKey.value;\n  afterRender.value;\n\n  return (ctx: CanvasRenderingContext2D, matrix: DOMMatrix) => {\n    const currentScene = scene.peek();\n    if (!currentScene) return;\n\n    let node = currentScene.getNode(selectedKey.value);\n    if (node) {\n      currentScene.drawOverlay(node.key, matrix, ctx);\n    }\n\n    node = currentScene.getNode(hoveredKey.value);\n    if (node && hoveredKey.value !== selectedKey.value) {\n      ctx.globalAlpha = 0.5;\n      currentScene.drawOverlay(hoveredKey.value, matrix, ctx);\n    }\n  };\n}\n\nexport const PreviewOverlayConfig: PluginOverlayConfig = {\n  drawHook,\n  component: Component,\n};\n", "export function CircleIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M10,5C12.76,5 15,7.24 15,10C15,12.76 12.76,15 10,15C7.24,15 5,12.76 5,10C5,7.24 7.24,5 10,5ZM10,7C8.344,7 7,8.344 7,10C7,11.656 8.344,13 10,13C11.656,13 13,11.656 13,10C13,8.344 11.656,7 10,7Z\" />\n    </svg>\n  );\n}\n", "export function CodeBlockIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M5,9L5,6.999C5,6.469 5.211,5.96 5.585,5.586C5.96,5.211 6.469,5 6.999,5L9,5L9,7L6.999,7L7,9L7,11L7,13L8.985,13L9,15L7,15C5.895,15 5,14.105 5,13L5,11L4,11L4,9L5,9Z\" />\n      <path d=\"M15,11L15,13.001C15,13.531 14.789,14.04 14.415,14.414C14.04,14.789 13.531,15 13.001,15L11,15L11,13L13,13L13,11L13,9L13,7L11.015,7L11,5L13,5C14.105,5 15,5.895 15,7L15,9L16,9L16,11L15,11Z\" />\n    </svg>\n  );\n}\n", "export function CurveIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M12.19,6.47L13.595,5.047C15.519,6.947 15.187,8.932 14.229,9.951C13.675,10.541 12.879,10.861 12.016,10.767C11.261,10.685 10.426,10.278 9.708,9.348C9.292,8.809 8.878,8.441 8.471,8.249C8.217,8.13 7.979,8.084 7.77,8.154C7.565,8.222 7.409,8.394 7.287,8.621C7.097,8.975 7.001,9.444 7,10.003C6.996,11.584 7.848,12.746 8.91,12.946C9.535,13.064 10.185,12.783 10.687,12.082L12.313,13.247C11,15.079 9.118,15.344 7.581,14.591C6.161,13.896 4.994,12.246 5,9.997C5.005,7.945 5.963,6.649 7.136,6.257C8.281,5.874 9.866,6.278 11.292,8.126C11.81,8.799 12.421,8.954 12.772,8.581C13.196,8.13 13.042,7.312 12.19,6.47Z\" />\n    </svg>\n  );\n}\n", "export function GridIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M6,8L4,8L4,6L6,6L6,4L8,4L8,6L12,6L12,4L14,4L14,6L16,6L16,8L14,8L14,12L16,12L16,14L14,14L14,16L12,16L12,14L8,14L8,16L6,16L6,14L4,14L4,12L6,12L6,8ZM8,12L12,12L12,8L8,8L8,12Z\" />\n    </svg>\n  );\n}\n", "export function ImgIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M5,15L15,15L15,10L13,8L8,13L5,10L5,15Z\" />\n      <circle cx=\"8\" cy=\"7\" r=\"2\" />\n    </svg>\n  );\n}\n", "export function LayoutIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M14,5C14.552,5 15,5.448 15,6C15,7.916 15,12.084 15,14C15,14.552 14.552,15 14,15C12.815,15 11,15 11,15L11,5L14,5Z\" />\n      <path d=\"M9,5L9,9L5,9L5,6C5,5.448 5.448,5 6,5L9,5Z\" />\n      <path d=\"M9,11L9,15L6,15C5.448,15 5,14.552 5,14L5,11L9,11Z\" />\n    </svg>\n  );\n}\n", "export function LineIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M9.906,4.589L11.411,5.906L8.529,9.2L13.859,8.439C14.273,8.379 14.68,8.584 14.879,8.952C15.078,9.319 15.028,9.772 14.753,10.087L10.094,15.411L8.589,14.094L11.471,10.8L6.141,11.561C5.727,11.621 5.32,11.416 5.121,11.048C4.922,10.681 4.972,10.228 5.247,9.913L9.906,4.589Z\" />\n    </svg>\n  );\n}\n", "export function NodeIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M7,9L5,9L5,7L7,7L7,5L9,5L9,7L12,7L12,5L15,8L12,11L12,9L9,9L9,12L11,12L8,15L5,12L7,12L7,9Z\" />\n    </svg>\n  );\n}\n", "export function RayIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M12,9.414L6.707,14.707L5.293,13.293L10.586,8L8,8L8,6L13,6C13.552,6 14,6.448 14,7L14,12L12,12L12,9.414Z\" />\n    </svg>\n  );\n}\n", "export function RectIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M15,6L15,14C15,14.552 14.552,15 14,15L6,15C5.448,15 5,14.552 5,14L5,6C5,5.448 5.448,5 6,5L14,5C14.552,5 15,5.448 15,6ZM13,7L7,7L7,13L13,13L13,7Z\" />\n    </svg>\n  );\n}\n", "export function ShapeIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M11.746,10.93C12.637,12.664 11.973,14.504 10.611,15.244C9.692,15.743 8.385,15.804 6.94,14.829C5.555,13.893 4.689,12.16 4.544,10.388C4.395,8.572 5,6.752 6.399,5.701C8.069,4.445 10.793,4.271 12.765,4.921C14.324,5.436 15.374,6.473 15.495,7.691C15.651,9.262 14.613,10.061 13.26,10.5C12.847,10.634 12.41,10.735 12.02,10.841C11.936,10.864 11.838,10.897 11.746,10.93ZM7.601,7.299C6.737,7.949 6.445,9.103 6.537,10.224C6.633,11.389 7.149,12.556 8.06,13.171C8.696,13.601 9.251,13.706 9.656,13.486C10.207,13.187 10.315,12.395 9.886,11.701C9.48,11.044 9.513,10.523 9.68,10.122C9.835,9.75 10.164,9.417 10.678,9.187C11.243,8.935 12.157,8.8 12.908,8.503C13.216,8.381 13.542,8.264 13.505,7.888C13.485,7.691 13.359,7.53 13.197,7.384C12.928,7.143 12.558,6.959 12.138,6.821C10.736,6.358 8.789,6.406 7.601,7.299Z\" />\n    </svg>\n  );\n}\n", "export function TxtIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M9,13L9,6L11,6L11,13L12,13L12,15L8,15L8,13L9,13Z\" />\n      <path d=\"M7,8L5,8L5,6C5,5.448 5.448,5 6,5L14,5C14.552,5 15,5.448 15,6L15,8L13,8L13,7L7,7L7,8Z\" />\n    </svg>\n  );\n}\n", "export function VideoIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M14,10.866L7.25,14.763C6.941,14.942 6.559,14.942 6.25,14.763C5.941,14.585 5.75,14.254 5.75,13.897L5.75,6.103C5.75,5.746 5.941,5.415 6.25,5.237C6.559,5.058 6.941,5.058 7.25,5.237L14,9.134C14.309,9.313 14.5,9.643 14.5,10C14.5,10.357 14.309,10.687 14,10.866ZM11.5,10L7.75,7.835L7.75,12.165L11.5,10Z\" />\n    </svg>\n  );\n}\n", "export function View2DIcon() {\n  return (\n    <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path d=\"M9,5L9,7L7,7L7,9L5,9L5,6C5,5.448 5.448,5 6,5L9,5Z\" />\n      <path d=\"M5,11L7,11L7,13L9,13L9,15L6,15C5.448,15 5,14.552 5,14L5,11Z\" />\n      <path d=\"M11,15L11,13L13,13L13,11L15,11L15,14C15,14.552 14.552,15 14,15L11,15Z\" />\n      <path d=\"M15,9L13,9L13,7L11,7L11,5L14,5C14.552,5 15,5.448 15,6L15,9Z\" />\n    </svg>\n  );\n}\n", "/* eslint-disable @typescript-eslint/naming-convention */\n\nimport type {FunctionComponent} from 'preact';\nimport {CircleIcon} from './CircleIcon';\nimport {CodeBlockIcon} from './CodeBlockIcon';\nimport {CurveIcon} from './CurveIcon';\nimport {GridIcon} from './GridIcon';\nimport {ImgIcon} from './ImgIcon';\nimport {LayoutIcon} from './LayoutIcon';\nimport {LineIcon} from './LineIcon';\nimport {NodeIcon} from './NodeIcon';\nimport {RayIcon} from './RayIcon';\nimport {RectIcon} from './RectIcon';\nimport {ShapeIcon} from './ShapeIcon';\nimport {TxtIcon} from './TxtIcon';\nimport {VideoIcon} from './VideoIcon';\nimport {View2DIcon} from './View2DIcon';\n\nexport const IconMap: Record<string, FunctionComponent> = {\n  Circle: CircleIcon,\n  CodeBlock: CodeBlockIcon,\n  Curve: CurveIcon,\n  Grid: GridIcon,\n  Img: ImgIcon,\n  Layout: LayoutIcon,\n  Line: LineIcon,\n  Node: NodeIcon,\n  Ray: RayIcon,\n  Rect: RectIcon,\n  Shape: ShapeIcon,\n  Txt: TxtIcon,\n  TxtLeaf: TxtIcon,\n  Video: VideoIcon,\n  View2D: View2DIcon,\n};\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import type {Signal} from '@preact/signals';\nimport {Collapse, Toggle} from '@revideo/ui';\nimport {clsx} from 'clsx';\nimport type {ComponentChildren, JSX} from 'preact';\nimport type {Ref} from 'preact/hooks';\nimport styles from './index.module.scss';\n\nconst DEPTH_VAR = '--depth';\n\ninterface TreeElementProps\n  extends Omit<JSX.HTMLAttributes<HTMLDivElement>, 'label' | 'icon'> {\n  icon?: ComponentChildren;\n  label: ComponentChildren;\n  children?: ComponentChildren;\n  selected?: boolean;\n  open: Signal<boolean>;\n  depth?: number;\n  forwardRef?: Ref<HTMLDivElement>;\n}\n\nexport function TreeElement({\n  label,\n  children,\n  selected,\n  depth = 0,\n  open,\n  icon,\n  forwardRef,\n  ...props\n}: TreeElementProps) {\n  const hasChildren = !!children;\n\n  return (\n    <>\n      <div\n        ref={forwardRef}\n        className={clsx(\n          styles.label,\n          selected && styles.active,\n          hasChildren && styles.parent,\n        )}\n        onDblClick={() => {\n          if (hasChildren) {\n            open.value = !open.value;\n          }\n        }}\n        {...props}\n        style={{[DEPTH_VAR]: `${depth}`}}\n      >\n        {hasChildren && (\n          <Toggle\n            animated={false}\n            open={open.value}\n            onToggle={value => {\n              open.value = value;\n            }}\n            onDblClick={e => {\n              e.stopPropagation();\n            }}\n          />\n        )}\n        {icon}\n        {label}\n      </div>\n      {hasChildren && (\n        <Collapse open={open.value} animated={false}>\n          {children}\n        </Collapse>\n      )}\n    </>\n  );\n}\n", "import {useComputed, useSignal, useSignalEffect} from '@preact/signals';\nimport type {Node} from '@revideo/2d';\nimport {NODE_NAME} from '@revideo/2d';\nimport {useRef} from 'preact/hooks';\nimport {usePluginState} from '../Provider';\nimport {IconMap} from '../icons/IconMap';\nimport {TreeElement} from './TreeElement';\n\ninterface NodeElementProps {\n  node: Node;\n  depth?: number;\n}\n\nexport function NodeElement({node, depth = 0}: NodeElementProps) {\n  const {selectedKey, hoveredKey, openNodes, selectedChain, afterRender} =\n    usePluginState();\n  const ref = useRef<HTMLDivElement>(null);\n  const open = useSignal(\n    selectedChain.peek().has(node.key) || (openNodes.get(node.key) ?? false),\n  );\n  const nodeSignal = useSignal(node);\n  nodeSignal.value = node;\n\n  const children = useComputed(() => {\n    afterRender.value;\n    return nodeSignal.value.peekChildren();\n  });\n\n  useSignalEffect(() => {\n    open.value = openNodes.get(nodeSignal.value.key) ?? false;\n  });\n\n  useSignalEffect(() => {\n    const chain = selectedChain.value;\n    if (chain.has(nodeSignal.value.key)) {\n      open.value = true;\n    }\n  });\n\n  useSignalEffect(() => {\n    openNodes.set(nodeSignal.value.key, open.value);\n  });\n\n  useSignalEffect(() => {\n    const key = selectedKey.value;\n    if (node.key === key) {\n      ref.current?.scrollIntoView({block: 'nearest', behavior: 'instant'});\n    }\n  });\n\n  const Icon = IconMap[node[NODE_NAME]] ?? IconMap.Node;\n\n  return (\n    <TreeElement\n      forwardRef={ref}\n      open={open}\n      depth={depth}\n      icon={<Icon />}\n      label={node.key}\n      selected={selectedKey.value === node.key}\n      onClick={event => {\n        selectedKey.value = node.key;\n        event.stopPropagation();\n      }}\n      onPointerEnter={() => (hoveredKey.value = node.key)}\n      onPointerLeave={() => (hoveredKey.value = null)}\n    >\n      {children.value.length > 0 &&\n        children.value.map(child => (\n          <NodeElement node={child} depth={depth + 1} />\n        ))}\n    </TreeElement>\n  );\n}\n", "import {clsx} from 'clsx';\nimport type {JSX} from 'preact';\nimport styles from './index.module.scss';\n\nexport function TreeRoot({\n  className,\n  ...props\n}: JSX.HTMLAttributes<HTMLDivElement>) {\n  return <div className={clsx(styles.root, className)} {...props} />;\n}\n", "import {useSignal} from '@preact/signals';\nimport {usePluginState} from '../Provider';\nimport {NodeElement} from './NodeElement';\nimport {TreeElement} from './TreeElement';\nimport {TreeRoot} from './TreeRoot';\n\nexport function DetachedRoot() {\n  const {afterRender, scene} = usePluginState();\n  const open = useSignal(false);\n  const currentScene = scene.value;\n  const children = currentScene ? [...currentScene.getDetachedNodes()] : [];\n  afterRender.value;\n\n  return children.length > 0 ? (\n    <TreeRoot>\n      <TreeElement open={open} label=\"Detached nodes\">\n        {children.map(child => (\n          <NodeElement node={child} depth={1} />\n        ))}\n      </TreeElement>\n    </TreeRoot>\n  ) : null;\n}\n", "import {useSignal, useSignalEffect} from '@preact/signals';\nimport {usePluginState} from '../Provider';\nimport {NodeElement} from './NodeElement';\nimport {TreeRoot} from './TreeRoot';\n\nexport function ViewRoot() {\n  const {scene} = usePluginState();\n  const view = useSignal(scene.value?.getView());\n\n  useSignalEffect(() => {\n    view.value = scene.value?.getView();\n    return scene.value?.onReset.subscribe(() => {\n      view.value = scene.value?.getView();\n    });\n  });\n\n  return view.value ? (\n    <TreeRoot>{<NodeElement node={view.value} />}</TreeRoot>\n  ) : null;\n}\n", "import type {PluginTabConfig, PluginTabProps} from '@revideo/ui';\nimport {\n  AccountTree,\n  emphasize,\n  Pane,\n  Tab,\n  useApplication,\n  usePanels,\n  useReducedMotion,\n} from '@revideo/ui';\n\nimport {useSignalEffect} from '@preact/signals';\nimport {useEffect, useRef} from 'preact/hooks';\nimport {usePluginState} from './Provider';\nimport {DetachedRoot, ViewRoot} from './tree';\n\nfunction TabComponent({tab}: PluginTabProps) {\n  const {sidebar} = usePanels();\n  const inspectorTab = useRef<HTMLButtonElement>(null);\n  const reducedMotion = useReducedMotion();\n  const {selectedKey} = usePluginState();\n  const {logger} = useApplication();\n\n  useEffect(\n    () =>\n      logger.onInspected.subscribe(key => {\n        sidebar.set(tab);\n        selectedKey.value = key;\n      }),\n    [tab],\n  );\n\n  useSignalEffect(() => {\n    if (\n      selectedKey.value &&\n      sidebar.current.peek() !== tab &&\n      !reducedMotion &&\n      inspectorTab.current &&\n      inspectorTab.current.getAnimations().length < 2\n    ) {\n      inspectorTab.current.animate(emphasize(), {duration: 400});\n      inspectorTab.current.animate([{color: 'white'}, {color: ''}], {\n        duration: 800,\n      });\n    }\n  });\n\n  return (\n    <Tab\n      forwardRef={inspectorTab}\n      title=\"Scene Graph\"\n      id=\"scene-graph-tab\"\n      tab={tab}\n    >\n      <AccountTree />\n    </Tab>\n  );\n}\n\nfunction PaneComponent() {\n  const {selectedKey} = usePluginState();\n\n  return (\n    <Pane\n      title=\"Scene Graph\"\n      id=\"scene-graph-pane\"\n      onClick={() => {\n        selectedKey.value = null;\n      }}\n    >\n      <ViewRoot />\n      <DetachedRoot />\n    </Pane>\n  );\n}\n\nexport const SceneGraphTabConfig: PluginTabConfig = {\n  name: 'scene-graph',\n  tabComponent: TabComponent,\n  paneComponent: PaneComponent,\n};\n", "import './index.css';\n\nimport {makeEditorPlugin} from '@revideo/ui';\nimport {NodeInspectorConfig} from './NodeInspectorConfig';\nimport {PreviewOverlayConfig} from './PreviewOverlayConfig';\nimport {Provider} from './Provider';\nimport {SceneGraphTabConfig} from './SceneGraphTabConfig';\n\nexport default makeEditorPlugin(() => {\n  return {\n    name: '@revideo/2d',\n    provider: Provider,\n    previewOverlay: PreviewOverlayConfig,\n    tabs: [SceneGraphTabConfig],\n    inspectors: [NodeInspectorConfig],\n  };\n});\n"],
  "mappings": "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",
  "names": ["_jsx", "Component", "_a", "attributes", "signal", "_jsxs", "_Fragment"]
}
